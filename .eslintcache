[{"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\index.js":"1","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\reportWebVitals.js":"2","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\App.js":"3","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\AllProductsPage.js":"4","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\ProductList.js":"5","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\store\\store.js":"6","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\actions\\productActions.js":"7","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\data\\productsApi.js":"8","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\actions\\actionTypes.js":"9","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\reducers\\index.js":"10","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\reducers\\productsReducer.js":"11","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\Product.js":"12","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\Home.js":"13","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\ProductDetails.js":"14","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\AddProductPage.js":"15","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\AddProductForm.js":"16","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\UpdageProductPage.js":"17","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\UpdateProductForm.js":"18","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\TopProductPage.js":"19","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\BarChart.js":"20","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\SignInPage.js":"21","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\actions\\userActions.js":"22","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\data\\usersApi.js":"23","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\reducers\\usersReducer.js":"24","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\SignInForm.js":"25","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\SignUpPage.js":"26","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\SignUpForm.js":"27","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\Loading.js":"28"},{"size":529,"mtime":1611271812150,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"30"},{"size":7273,"mtime":1612277829367,"results":"32","hashOfConfig":"30"},{"size":1211,"mtime":1611099446484,"results":"33","hashOfConfig":"30"},{"size":13800,"mtime":1611956957094,"results":"34","hashOfConfig":"30"},{"size":221,"mtime":1610894503092,"results":"35","hashOfConfig":"30"},{"size":1877,"mtime":1611586669022,"results":"36","hashOfConfig":"30"},{"size":1227,"mtime":1611583836959,"results":"37","hashOfConfig":"30"},{"size":299,"mtime":1610993016421,"results":"38","hashOfConfig":"30"},{"size":207,"mtime":1610894436095,"results":"39","hashOfConfig":"30"},{"size":878,"mtime":1610961252735,"results":"40","hashOfConfig":"30"},{"size":4082,"mtime":1611942005633,"results":"41","hashOfConfig":"30"},{"size":1174,"mtime":1612017259370,"results":"42","hashOfConfig":"30"},{"size":1985,"mtime":1612021711612,"results":"43","hashOfConfig":"30"},{"size":1510,"mtime":1611583880383,"results":"44","hashOfConfig":"30"},{"size":5216,"mtime":1611583865985,"results":"45","hashOfConfig":"30"},{"size":1478,"mtime":1612018457595,"results":"46","hashOfConfig":"30"},{"size":3415,"mtime":1611968956288,"results":"47","hashOfConfig":"30"},{"size":1287,"mtime":1611151851392,"results":"48","hashOfConfig":"30"},{"size":4261,"mtime":1611968857713,"results":"49","hashOfConfig":"30"},{"size":740,"mtime":1611961561580,"results":"50","hashOfConfig":"30"},{"size":708,"mtime":1611583957079,"results":"51","hashOfConfig":"30"},{"size":488,"mtime":1611583827948,"results":"52","hashOfConfig":"30"},{"size":320,"mtime":1611583848360,"results":"53","hashOfConfig":"30"},{"size":2461,"mtime":1611967722378,"results":"54","hashOfConfig":"30"},{"size":886,"mtime":1611583937682,"results":"55","hashOfConfig":"30"},{"size":3892,"mtime":1611099918823,"results":"56","hashOfConfig":"30"},{"size":439,"mtime":1611590650218,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1pqemsv",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"60"},"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\index.js",[],["127","128"],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\reportWebVitals.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\App.js",["129","130"],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\AllProductsPage.js",["131"],"import React, { Component } from \"react\";\r\nimport ProductList from \"./ProductList\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as action from \"../actions/productActions\";\r\n\r\nclass AllProductsPage extends Component {\r\n  incViewCount = (id) => {\r\n    const product = this.props.products.filter((product) => product.id == id);\r\n    this.props.actions.incViewCount(product[0].view, id);\r\n  };\r\n\r\n  deleteProducthandle = (id) => {\r\n    this.props.actions.deleteProduct(id);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let loggedinStatus = localStorage.getItem('login');\r\n    let val = loggedinStatus?true:false;\r\n    this.props.loggedIn(val)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ProductList\r\n          deleteProductProp={this.deleteProducthandle}\r\n          incViewCountProp={this.incViewCount}\r\n          {...this.props}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return { products: state.products };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: bindActionCreators(action, dispatch),\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllProductsPage);\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\ProductList.js",["132","133","134","135","136","137","138","139","140"],"import React, { Component } from \"react\";\r\nimport Product from \"./Product\";\r\nimport Modal from \"react-modal\";\r\nimport { FaRegWindowClose } from \"react-icons/fa\";\r\n// import {Modal, Button} from 'react-bootstrap';\r\n\r\n// Modal.setAppElement(\"#root\");\r\n\r\nconst TitleList = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row bottom-buffer\">\r\n        <div style ={{paddingLeft : '38px'}} className=\"col-sm-4 \">\r\n          <span id=\"head-names1\" className=\"prod-items\">\r\n            <u>\r\n              <b>Title</b>\r\n            </u>\r\n          </span>\r\n        </div>\r\n        <div className={props.priceSelect ? \"col\" : \"hide-item-li\"}>\r\n          <span id=\"head-names2\" className=\"prod-items\">\r\n            <u>\r\n              <b>Price</b>\r\n            </u>\r\n          </span>\r\n        </div>\r\n        <div className={props.quantitySelect ? \"col \" : \"hide-item-li\"}>\r\n          <span id=\"head-names3\" className=\"prod-items\">\r\n            <u>\r\n              <b>Quantity</b>\r\n            </u>\r\n          </span>\r\n        </div>\r\n        <div className={props.categorySelect ? \"col \" : \"hide-item-li\"}>\r\n          <span id=\"head-names4\" className=\"prod-items\">\r\n            <u>\r\n              <b>Category</b>\r\n            </u>\r\n          </span>\r\n        </div>\r\n        <div className={props.brandSelect ? \"col \" : \"hide-item-li\"}>\r\n          <span id=\"head-names5\" className=\"prod-items\">\r\n            <u>\r\n              <b>Brand</b>\r\n            </u>\r\n          </span>\r\n        </div>\r\n        <div className=\"col\">\r\n          <span id=\"head-names6\" className=\"prod-items\">\r\n            <u>\r\n              <b>Update Product</b>\r\n            </u>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n/////////////////////Product List/////////////////////////\r\n\r\nexport default class ProductList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      checkedInputs: [],\r\n      title: [],\r\n      enableButton: false,\r\n      toUncheck: 0,\r\n      isModalOpen: false,\r\n      priceSelect: true,\r\n      quantitySelect: true,\r\n      categorySelect: true,\r\n      brandSelect: true,\r\n    };\r\n  }\r\n\r\n  fieldSelectStatus = (e) => {\r\n    if (e.target.name === \"price\") {\r\n      this.setState({ priceSelect: !this.state.priceSelect });\r\n    } else if (e.target.name === \"quantity\") {\r\n      this.setState({ quantitySelect: !this.state.quantitySelect });\r\n    } else if (e.target.name === \"category\") {\r\n      this.setState({ categorySelect: !this.state.categorySelect });\r\n    } else {\r\n      this.setState({ brandSelect: !this.state.brandSelect });\r\n    }\r\n    console.log(\"stattt\", this.state, e);\r\n  };\r\n  checkedInputPushHandler = (id, title) => {\r\n    this.setState(\r\n      {\r\n        checkedInputs: [...this.state.checkedInputs, id],\r\n        title: [...this.state.title, title],\r\n        enableButton: true,\r\n      },\r\n      () => {\r\n        console.log(this.state.checkedInputs, this.state.title);\r\n      }\r\n    );\r\n  };\r\n\r\n  checkedInputPopHandler = (id, title) => {\r\n    this.setState(\r\n      {\r\n        checkedInputs: this.state.checkedInputs.filter((el) => el !== id),\r\n        title: this.state.title.filter((el) => el !== title),\r\n      },\r\n      () => {\r\n        console.log(this.state.checkedInputs, this.state.title);\r\n        if (this.state.checkedInputs.length == 0) {\r\n          this.setState({ enableButton: false });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  deleteProduct = (id) => {\r\n    this.props.deleteProductProp(id);\r\n  };\r\n\r\n  checkLogin = () => {\r\n    let login = localStorage.getItem(\"login\");\r\n    if (login) {\r\n      this.props.history.push(\"/addproduct\");\r\n    } else {\r\n      let flag = window.confirm(\"Please log-in to update\");\r\n      if (flag) {\r\n        this.props.history.push(\"/signin\");\r\n      } else {\r\n        this.props.history.push(\"/products\");\r\n      }\r\n    }\r\n  };\r\n  getProductsAfterSearch = (product) => {\r\n    let classString;\r\n    const remainder = product.id < 7 ? product.id : product.id % 7;\r\n    switch (remainder) {\r\n      case 0:\r\n        classString = \"primary\";\r\n        break;\r\n      case 1:\r\n        classString = \"secondary\";\r\n        break;\r\n      case 2:\r\n        classString = \"success\";\r\n        break;\r\n      case 3:\r\n        classString = \"danger\";\r\n        break;\r\n      case 4:\r\n        classString = \"warning\";\r\n        break;\r\n      case 5:\r\n        classString = \"info\";\r\n        break;\r\n      case 6:\r\n        classString = \"light\";\r\n        break;\r\n      default:\r\n        classString = \"dark\";\r\n    }\r\n    return classString;\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props, \"productlist\");\r\n    localStorage.removeItem(\"products\");\r\n    localStorage.setItem(\"products\", JSON.stringify(this.props.products));\r\n\r\n    const productList = this.props.products.map((product, ind) => {\r\n      if (\r\n        this.props.searchValue &&\r\n        (product.category.toLowerCase().includes(this.props.searchValue) ||\r\n          product.title.toLowerCase().includes(this.props.searchValue) ||\r\n          product.manufacturer.toLowerCase().includes(this.props.searchValue))\r\n      ) {\r\n        return (\r\n          <div key={product.id}>\r\n            {ind === 0 ? <TitleList /> : null}\r\n            <li\r\n              className={`list-group-item list-group-item-${this.getProductsAfterSearch(\r\n                product\r\n              )}`}\r\n            >\r\n              <Product\r\n                inputCheckedPop={this.checkedInputPopHandler}\r\n                inputCheckedPush={this.checkedInputPushHandler}\r\n                {...product}\r\n                {...this.props}\r\n                uncheck={this.state.toUncheck}\r\n                prCheck={this.state.priceSelect}\r\n                quCheck={this.state.quantitySelect}\r\n                caCheck={this.state.categorySelect}\r\n                brCheck={this.state.brandSelect}\r\n              />\r\n            </li>\r\n          </div>\r\n        );\r\n      } else if (this.props.searchValue == \"\") {\r\n        return (\r\n          <div key={product.id}>\r\n            {ind === 0 ? <TitleList {...this.state} /> : null}\r\n            <li\r\n              key={product.id}\r\n              className={`list-group-item list-group-item-${this.getProductsAfterSearch(\r\n                product\r\n              )}`}\r\n            >\r\n              <Product\r\n                inputCheckedPop={this.checkedInputPopHandler}\r\n                inputCheckedPush={this.checkedInputPushHandler}\r\n                {...product}\r\n                {...this.props}\r\n                uncheck={this.state.toUncheck}\r\n                prCheck={this.state.priceSelect}\r\n                quCheck={this.state.quantitySelect}\r\n                caCheck={this.state.categorySelect}\r\n                brCheck={this.state.brandSelect}\r\n              />\r\n            </li>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n    return (\r\n      <>\r\n        {/************Modal******************* */}\r\n        <div className=\"ui container modal-div\">\r\n          <Modal\r\n            style={{\r\n              content: {\r\n                backgroundColor: \"transparent\",\r\n                border: \"none\",\r\n              },\r\n            }}\r\n            isOpen={this.state.isModalOpen}\r\n          >\r\n            {/* Card */}\r\n            <div className=\"card text-center\">\r\n              <div className=\"card-header\">\r\n                <h4>Select the fields</h4>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <p className=\"card-text\">\r\n                  <div\r\n                    style={{\r\n                      color: \"rgb(31, 31, 31)\",\r\n                      textAlign: \"center\",\r\n                      margin: \"auto\",\r\n                    }}\r\n                  >\r\n                    <div className=\"custum-fields\">\r\n                      <input\r\n                        onChange={(e) => this.fieldSelectStatus(e)}\r\n                        checked={this.state.priceSelect}\r\n                        type=\"checkbox\"\r\n                        name=\"price\"\r\n                      />{\" \"}\r\n                      <span\r\n                        style={{\r\n                          color: \"rgb(31, 31, 31)\",\r\n                          marginRight: \"30px\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        Price\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"custum-fields\">\r\n                      <input\r\n                        onChange={(e) => this.fieldSelectStatus(e)}\r\n                        checked={this.state.quantitySelect}\r\n                        type=\"checkbox\"\r\n                        name=\"quantity\"\r\n                      />\r\n                      <span\r\n                        style={{\r\n                          color: \"rgb(31, 31, 31)\",\r\n                          marginRight: \"25px\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        Quantity\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"custum-fields\">\r\n                      <input\r\n                        onChange={(e) => this.fieldSelectStatus(e)}\r\n                        checked={this.state.categorySelect}\r\n                        type=\"checkbox\"\r\n                        name=\"category\"\r\n                      />\r\n                      <span\r\n                        style={{\r\n                          color: \"rgb(31, 31, 31)\",\r\n                          marginRight: \"25px\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        Category\r\n                      </span>\r\n                    </div>\r\n\r\n                    <div className=\"custum-fields\">\r\n                      <input\r\n                        onChange={(e) => this.fieldSelectStatus(e)}\r\n                        checked={this.state.brandSelect}\r\n                        type=\"checkbox\"\r\n                        name=\"brand\"\r\n                      />\r\n                      <span\r\n                        style={{\r\n                          color: \"rgb(31, 31, 31)\",\r\n                          marginRight: \"25px\",\r\n                        }}\r\n                      >\r\n                        {\" \"}\r\n                        Brand\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </p>\r\n                <a\r\n                  href=\"#\"\r\n                  onClick={() => this.setState({ isModalOpen: false })}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  OK\r\n                </a>\r\n              </div>\r\n              <div className=\"cancel-icon\">\r\n                <a\r\n                  href=\"#\"\r\n                  onClick={() => this.setState({ isModalOpen: false })}\r\n                >\r\n                  <FaRegWindowClose style={{ color: \"rgb(34, 34, 34)\" }} />\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n\r\n        {/* *********Buttons***************** */}\r\n        <div className=\"container\">\r\n          <div className=\"div-btn-add\">\r\n            <div className=\"div-customize\">\r\n              <a\r\n                onClick={() => this.setState({ isModalOpen: true })}\r\n                style={{ width: \"auto\" }}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                <span>Customize</span>\r\n              </a>\r\n            </div>\r\n            <div className=\"div-add-delete-btn\">\r\n              <a\r\n                onClick={this.checkLogin}\r\n                style={{ marginLeft: \"5px\" }}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                <span>Add</span>\r\n              </a>\r\n              <a\r\n                id={this.props.id}\r\n                onClick={async (event) => {\r\n                  if (this.state.checkedInputs.length == 0) {\r\n                    alert(\"Please select at least one product to delete!\");\r\n                  } else {\r\n                    let index = 0;\r\n                    let login = localStorage.getItem(\"login\");\r\n                    if (login) {\r\n                      for (const item of this.state.checkedInputs) {\r\n                        var flag = await window.confirm(\r\n                          `Are you sure to remove ${this.state.title[index]}?`\r\n                        );\r\n                        if (flag) {\r\n                          await this.deleteProduct(item);\r\n                          index++;\r\n                          this.setState({ toUncheck: this.state.toUncheck++ });\r\n                        } else {\r\n                          this.setState({ toUncheck: this.state.toUncheck++ });\r\n                        }\r\n                      }\r\n                    } else {\r\n                      let flag = window.confirm(\"Please log-in to delete\");\r\n                      if (flag) {\r\n                        this.props.history.push(\"/signin\");\r\n                      } else {\r\n                        this.props.history.push(\"/products\");\r\n                      }\r\n                    }\r\n\r\n                    this.setState({ checkedInputs: [], title: [] });\r\n                  }\r\n                }}\r\n                style={{ marginLeft: \"5px\" }}\r\n                href=\"#\"\r\n                className={\r\n                  this.state.enableButton\r\n                    ? \"btn btn-primary\"\r\n                    : \"btn btn-primary disabled\"\r\n                }\r\n              >\r\n                <span>Delete</span>\r\n              </a>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* ***********List********** */}\r\n        <div style={{ width: \"100%\" }}>\r\n          <ul className=\"list-group\">{productList}</ul>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\store\\store.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\actions\\productActions.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\data\\productsApi.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\actions\\actionTypes.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\reducers\\index.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\reducers\\productsReducer.js",["141"],"import * as types from \"../actions/actionTypes\";\r\n\r\nexport default function productsReducer(state = [], action) {\r\n  switch (action.type) {\r\n    case types.GET_PRODUCTS:\r\n      return action.products;\r\n\r\n    case types.ADD_PRODUCT:\r\n      return [...state, action.product];\r\n    case types.DELETE_PRODUCT:\r\n      let newStateDelete = state.filter((product) => product.id != action.id);\r\n      return newStateDelete;\r\n\r\n    case types.UPDATE_PRODUCT:\r\n      let newStateWithoutProductUpdate = state.filter(\r\n        (item) => item.id !== action.product.id\r\n      );\r\n      return [action.product, ...newStateWithoutProductUpdate];\r\n\r\n    case types.INC_VIEW:\r\n      let newStateWithoutProductInc = state.filter(\r\n        (item) => item.id !== action.product.id\r\n      );\r\n      return [action.product, ...newStateWithoutProductInc];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\Product.js",["142","143","144"],"import React, { Component } from \"react\";\r\nimport \"../css/product.css\";\r\nimport * as productActions from \"../actions/productActions\";\r\n\r\nexport default class Product extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.detailLink = `/product/${this.props.id}`;\r\n  }\r\n\r\n\r\n  inputChecked = (checked) => {\r\n    if(checked){\r\n      this.props.inputCheckedPush(this.props.id, this.props.title)\r\n    }else{\r\n      this.props.inputCheckedPop(this.props.id, this.props.title)\r\n    }\r\n  }\r\n\r\n\r\n  updateProduct = (id) => {\r\n    let login = localStorage.getItem(\"login\");\r\n    if (login) {\r\n      this.props.history.push(\"/updateproduct\", {\r\n        id: this.props.id,\r\n        title: this.props.title,\r\n        price: this.props.price,\r\n        description: this.props.description,\r\n        manufacturer: this.props.manufacturer,\r\n        category: this.props.category,\r\n        image: this.props.image,\r\n        quantity: this.props.quantity,\r\n      });\r\n    } else {\r\n      let flag = window.confirm(\"Please log-in to update\");\r\n      if (flag) {\r\n        this.props.history.push(\"/signin\");\r\n      } else {\r\n        this.props.history.push(\"/products\");\r\n      }\r\n    }\r\n  };\r\n\r\n  ///onClick\r\n\r\n  ViewProduct = (id) => {\r\n    this.props.history.push(this.detailLink, {\r\n      id: this.props.id,\r\n      title: this.props.title,\r\n      price: this.props.price,\r\n      description: this.props.description,\r\n      manufacturer: this.props.manufacturer,\r\n      category: this.props.category,\r\n      image: this.props.image,\r\n    });\r\n    this.props.incViewCountProp(id);\r\n  }\r\n\r\n  onClickHandle = (e) => {\r\n    let login = localStorage.getItem('login')\r\n    if(login){\r\n           this.ViewProduct(this.props.id)\r\n    }else{\r\n      let flag = window.confirm('Please login to view the product');\r\n      if(flag){\r\n        this.props.history.push('/signin')\r\n      }else{\r\n        this.props.history.push('/products')\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n  render() {\r\n    let smallTitel = \r\n      this.props.title.length < 35\r\n        ? this.props.title\r\n        : this.props.title.slice(0, 35) + \"...\";\r\n\r\n     \r\n    return (\r\n      <div data-test = \"HeaderComponent\"  className=\"container\">\r\n        \r\n        \r\n        <div className=\"row\">\r\n          <div data-test = \"col\" className=\"col-sm-4 \">\r\n            <input\r\n              className=\"form-check-input me-1\"\r\n              type=\"checkbox\"\r\n              value=\"\"\r\n              aria-label=\"...\"\r\n              onChange = {e => this.inputChecked(e.target.checked)}\r\n              toJustRender = {this.props.uncheck}\r\n            />\r\n            <a\r\n              style={{ cursor: \"pointer\" }}\r\n              className=\"prod-items\"\r\n              onClick={() => this.onClickHandle()}\r\n            >\r\n              <u>{smallTitel}</u>\r\n            </a>\r\n          </div>\r\n          <div data-test = \"col\"  className={this.props.prCheck ? \"col \" : \"hide-item-li\"}>\r\n            <span className=\"prod-items\">{this.props.price} Rs.</span>\r\n          </div>\r\n          <div data-test = \"col\" className={this.props.quCheck ? \"col \" : \"hide-item-li\"}>\r\n            <span className=\"prod-items\">{this.props.quantity} items</span>\r\n          </div>\r\n          <div data-test = \"col\" className={this.props.caCheck ? \"col \" : \"hide-item-li\"}>\r\n            <span className=\"prod-items\">{this.props.category}</span>\r\n          </div>\r\n          <div data-test = \"col\"  className={this.props.brCheck ? \"col \" : \"hide-item-li\"}>\r\n            <span className=\"prod-items\">{this.props.manufacturer}</span>\r\n          </div>\r\n          <div data-test = \"col\" className=\"col col-update\">\r\n            <a\r\n              id={this.props.id}\r\n              onClick={(event) => {\r\n                this.updateProduct(event.currentTarget.id);\r\n              }}\r\n              style={{ marginLeft: \"5px\", textAlign: \"center\", width:\"auto\" }}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              <span className = \"span-btn-update\">Update</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\Home.js",["145"],"import React, { Component } from \"react\";\r\nimport \"../css/home.css\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className = \"ui container\">\r\n      <div className=\"home-container\">\r\n        <div className=\"card text-center\">\r\n          <div data-test=\"heading\" className=\"card-header card-head\"><h3>Product Inventory</h3></div>\r\n          <div className=\"card-body\">\r\n            <p style = {{textAlign:\"justify\"}} className = \"card-text\">\r\n            This system has provision to view the list of products and allows only the registered and authenticated users to add, edit, delete the products and view the product detail. The user interface to the system is implemented using React. The data about the products is managed in a JSON server. The client application interfaces with the JSON Server through http to retrieve and store data.\r\n            </p>\r\n            <a style = {{width: \"200px\"}} href=\"/products\" className=\"btn btn-primary\">\r\n              <span>View Our Products</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\ProductDetails.js",["146","147"],"import React, { Component } from \"react\";\r\n\r\nexport default class ProductDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.localStorageObj = this.props.location.state;\r\n    this.localStorageStr  = JSON.parse(localStorage.getItem(\"products\"));\r\n    \r\n    console.log(\"localStorage\", this.localStorageObj)\r\n  }\r\n\r\n  render() {\r\n    if (!this.localStorageObj) {\r\n      let arr = this.localStorageStr.filter(\r\n        (product) => product.id == this.props.match.params.id\r\n      );\r\n      this.localStorageObj = arr[0];\r\n    }\r\n    return (\r\n      <div className=\"home-container\">\r\n        <div className=\"card\">\r\n          <div className=\"pro-details-main\">\r\n            <div className=\"img-shadow\">\r\n              <img\r\n                style={{\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                  margin: \"auto\",\r\n                  padding: \"20px\",\r\n                }}\r\n                src={this.localStorageObj.image}\r\n                alt=\"Card image cap\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"card-body pro-details\">\r\n              <h4 className=\"card-title\">{this.localStorageObj.title}</h4>\r\n              <p className=\"card-text\">{this.localStorageObj.description}</p>\r\n              <p>\r\n                <b>Price: </b>Rs. {this.localStorageObj.price}\r\n              </p>\r\n              <p>\r\n                <b>Brand: </b>\r\n                {this.localStorageObj.manufacturer}\r\n              </p>\r\n              <p>\r\n                <b>Catagory: </b>\r\n                {this.localStorageObj.category}\r\n              </p>\r\n              <a\r\n                href=\"/products\"\r\n                className=\"btn btn-primary\"\r\n                style={{\r\n                  width: \"auto\",\r\n                  margin: 0\r\n                }}\r\n              >\r\n                View Other Products\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\AddProductPage.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\AddProductForm.js",["148"],"import { withFormik, Field, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst AddProductForm = (props) => {\r\n  const { errors, touched } = props;\r\n\r\n  const isTransition = () => {\r\n    props.tran();\r\n  };\r\n  const addProductSubmit = (e) => {\r\n    const product = {};\r\n    e.stopPropagation();\r\n    product.title = props.values.title;\r\n    product.price = props.values.price;\r\n    product.description = props.values.description;\r\n    product.manufacturer = props.values.manufacturer;\r\n    product.quantity = props.values.quantity;\r\n    product.category = props.values.category;\r\n    product.image = props.values.image;\r\n    product.view = 0;\r\n    if (\r\n      !product.title ||\r\n      !product.price ||\r\n      !product.description ||\r\n      !product.manufacturer ||\r\n      !product.quantity ||\r\n      !product.category ||\r\n      !product.image\r\n    ) {\r\n      var flag = window.confirm(\r\n        \"Required data is not provided! Do you still want to leave this page?\"\r\n      );\r\n      if (flag) {\r\n        props.history.push(\"/products\");\r\n      }\r\n    } else {\r\n      props.addProductProp(product);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <h4>Fill the form:</h4>\r\n      <br />\r\n      <span className=\"field-title\">Title: </span>\r\n      <Field\r\n        onInput={() => {\r\n          isTransition();\r\n        }}\r\n        type=\"text\"\r\n        name=\"title\"\r\n        placeholder=\"Enter Title\"\r\n      />\r\n      {touched.title && errors.title && (\r\n        <span className=\"form-err\">{errors.title}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Price: </span>\r\n      <Field\r\n        onInput={() => {\r\n          isTransition();\r\n        }}\r\n        type=\"number\"\r\n        name=\"price\"\r\n        placeholder=\"Enter Price\"\r\n      />\r\n      {touched.price && errors.price && (\r\n        <span className=\"form-err\">{errors.price}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Description: </span>\r\n      <Field\r\n        onInput={() => {\r\n          isTransition();\r\n        }}\r\n        type=\"textarea\"\r\n        name=\"description\"\r\n        placeholder=\"Enter Description\"\r\n      />\r\n      {touched.description && errors.description && (\r\n        <span className=\"form-err\">{errors.description}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Brand: </span>\r\n      <Field\r\n        onInput={() => {\r\n          isTransition();\r\n        }}\r\n        type=\"text\"\r\n        name=\"manufacturer\"\r\n        placeholder=\"Enter Brand Name\"\r\n      />\r\n      {touched.manufacturer && errors.manufacturer && (\r\n        <span className=\"form-err\">{errors.manufacturer}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Quantity: </span>\r\n      <Field\r\n        onInput={() => {\r\n          isTransition();\r\n        }}\r\n        type=\"number\"\r\n        name=\"quantity\"\r\n        placeholder=\"Enter Quantity\"\r\n      />\r\n      {touched.quantity && errors.quantity && (\r\n        <span className=\"form-err\">{errors.quantity}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Category: </span>\r\n      <Field\r\n        onInput={() => {\r\n          isTransition();\r\n        }}\r\n        type=\"text\"\r\n        name=\"category\"\r\n        placeholder=\"Enter Category\"\r\n      />\r\n      {touched.category && errors.category && (\r\n        <span className=\"form-err\">{errors.category}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Image Link: </span>\r\n      <Field\r\n        onInput={() => {\r\n          isTransition();\r\n        }}\r\n        type=\"url\"\r\n        name=\"image\"\r\n        placeholder=\"Enter url\"\r\n      />\r\n      {touched.image && errors.image && (\r\n        <span className=\"form-err\">{errors.image}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n      <button\r\n        onClick={addProductSubmit}\r\n        className=\"btn-add-product-sub\"\r\n        type=\"submit\"\r\n      >\r\n        Submit Form\r\n      </button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst formikForm = withFormik({\r\n  mapPropsToValues({ ttl, prc, desc, brand, qnty, cat, img }) {\r\n    return {\r\n      title: ttl || \"\",\r\n      price: prc || \"\",\r\n      description: desc || \"\",\r\n      manufacturer: brand || \"\",\r\n      quantity: qnty || \"\",\r\n      category: cat || \"\",\r\n      image: img || \"\",\r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    title: Yup.string()\r\n      .min(3, \"At least 3 characters are required\")\r\n      .required(\"Title is required\"),\r\n    price: Yup.number()\r\n      .positive(\"Enter Only Numbers\")\r\n      .required(\"Price is required\"),\r\n    description: Yup.string()\r\n      .min(20, \"At least 20 characters are required\")\r\n      .required(\"Description is required\"),\r\n    manufacturer: Yup.string()\r\n      .min(3, \"At least 3 characters are required\")\r\n      .required(\"Title is required\"),\r\n    quantity: Yup.number()\r\n      .positive(\"Enter Only Numbers\")\r\n      .required(\"Quantity is required\"),\r\n    category: Yup.string()\r\n      .min(3, \"At least 3 characters are required\")\r\n      .required(\"Category is required\"),\r\n    image: Yup.string().url(\"Please enter the valid url link\"),\r\n  }),\r\n})(AddProductForm);\r\n\r\nexport default formikForm;\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\UpdageProductPage.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\UpdateProductForm.js",["149"],"import { withFormik, Field, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst UpdateProductForm = (props) => {\r\n  const { errors, touched } = props;\r\n\r\n  const isTransition = () => {\r\n    props.tran();\r\n  };\r\n\r\n  const updateProductSubmit = () => {\r\n    debugger;\r\n    if (\r\n      !props.values.price ||\r\n      !props.values.quantity ||\r\n      !props.values.category ||\r\n      !props.values.image\r\n    ) {\r\n      let flag = window.confirm(\"Are you sure to leave this page without submitting?\");\r\n      if (flag) {\r\n        props.history.push(\"/products\");\r\n      }\r\n    } else {\r\n      debugger;\r\n      const product = {};\r\n      product.price = props.values.price;\r\n      product.quantity = props.values.quantity;\r\n      product.category = props.values.category;\r\n      product.image = props.values.image;\r\n      props.updateProductProp(product);\r\n      props.history.push(\"/products\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <h4>Fill the form to update the product's details:</h4>\r\n      <br />\r\n\r\n      <span className=\"field-title\">Price: </span>\r\n      <Field\r\n        onInput={() => {\r\n          isTransition();\r\n        }}\r\n        type=\"number\"\r\n        name=\"price\"\r\n        placeholder={props.price}\r\n      />\r\n      {touched.price && errors.price && (\r\n        <span className=\"form-err\">{errors.price}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Quantity: </span>\r\n      <Field\r\n        onInput={() => {\r\n          isTransition();\r\n        }}\r\n        type=\"number\"\r\n        name=\"quantity\"\r\n        placeholder={props.quantity}\r\n      />\r\n      {touched.quantity && errors.quantity && (\r\n        <span className=\"form-err\">{errors.quantity}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Category: </span>\r\n      <Field\r\n        onInput={() => {\r\n          isTransition();\r\n        }}\r\n        type=\"text\"\r\n        name=\"category\"\r\n        placeholder={props.category}\r\n      />\r\n      {touched.category && errors.category && (\r\n        <span className=\"form-err\">{errors.category}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Image Link: </span>\r\n      <Field\r\n        onInput={() => {\r\n          isTransition();\r\n        }}\r\n        type=\"url\"\r\n        name=\"image\"\r\n        placeholder={props.image}\r\n      />\r\n      {touched.image && errors.image && (\r\n        <span className=\"form-err\">{errors.image}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n      <button\r\n        onClick={updateProductSubmit}\r\n        className=\"btn-add-product-sub\"\r\n        type=\"submit\"\r\n      >\r\n        Submit Form\r\n      </button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst formikForm = withFormik({\r\n  mapPropsToValues({ prc, qnty, cat, img }) {\r\n    return {\r\n      price: prc || \"\",\r\n      quantity: qnty || \"\",\r\n      category: cat || \"\",\r\n      image: img || \"\",\r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    price: Yup.number()\r\n      .positive(\"Enter Only Numbers\")\r\n      .required(\"Price is required\"),\r\n    quantity: Yup.number()\r\n      .positive(\"Enter Only Numbers\")\r\n      .required(\"Quantity is required\"),\r\n    category: Yup.string()\r\n      .min(3, \"At least 3 characters are required\")\r\n      .required(\"Category is required\"),\r\n    image: Yup.string().url(\"Please enter the valid url link\"),\r\n  }),\r\n})(UpdateProductForm);\r\n\r\nexport default formikForm;\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\TopProductPage.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\BarChart.js",["150","151","152"],"//https://color.adobe.com/search?q=chart%20bar&page=2\r\nimport React, { useState } from \"react\";\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport logo from \"../logo.png\";\r\n\r\nfunction BarChart(props) {\r\n  const [customView, setCustomView] = useState(5);\r\n  let productsArray = [];\r\n\r\n  if (props.products[0]) {\r\n    productsArray = props.products;\r\n  } else {\r\n    productsArray = JSON.parse(localStorage.getItem(\"products\"));\r\n  }\r\n\r\n  let views = productsArray.map((product) => {\r\n    return { view: product.view, name: product.title, id: product.id };\r\n  });\r\n\r\n  let topViewed = views.sort((a, b) => b.view - a.view);\r\n\r\n  let backgroundColor = [\r\n    \"rgb(4, 104, 191, 0.7)\",\r\n    \"rgb(4, 119, 191, 0.7)\",\r\n    \"rgb(80, 191, 180, 0.7)\",\r\n    \"rgb(242, 196, 56, 0.7)\",\r\n    \"rgb(242, 130, 65, 0.7)\",\r\n    \"rgb(4, 104, 191, 0.7)\",\r\n    \"rgb(4, 119, 191, 0.7)\",\r\n    \"rgb(80, 191, 180, 0.7)\",\r\n    \"rgb(242, 196, 56, 0.7)\",\r\n    \"rgb(242, 130, 65, 0.7)\",\r\n  ];\r\n\r\n  let borderColor = [\r\n    \"rgb(4, 104, 191)\",\r\n    \"rgb(4, 119, 191)\",\r\n    \"rgb(80, 191, 180)\",\r\n    \"rgb(242, 196, 56)\",\r\n    \"rgb(242, 130, 65)\",\r\n    \"rgb(4, 104, 191)\",\r\n    \"rgb(4, 119, 191)\",\r\n    \"rgb(80, 191, 180)\",\r\n    \"rgb(242, 196, 56)\",\r\n    \"rgb(242, 130, 65)\",\r\n  ];\r\n  let topSelectedview = [];\r\n  let topSelectedProduct = [];\r\n  let topBackgrountColor = [];\r\n  let topBorderColor = [];\r\n  for (let i = 0; i < customView; i++) {\r\n    topSelectedview.push(topViewed[i].view);\r\n    topSelectedProduct.push({ name: topViewed[i].name, id: topViewed[i].id });\r\n    topBackgrountColor.push(backgroundColor[i]);\r\n    topBorderColor.push(borderColor[i]);\r\n  }\r\n\r\n  let topSelectProductShort = topSelectedProduct.map((product) => {\r\n    return `${product.name.slice(0, 20)}...`;\r\n  });\r\n\r\n  return (\r\n    \r\n\r\n      <div className={views.length>10 ? \"container main-bar-div\" : \"display-none\"}>\r\n        <div className=\"bar-div\">\r\n          <Bar\r\n            data={{\r\n              labels: topSelectProductShort,\r\n              datasets: [\r\n                {\r\n                  label: \"Views\",\r\n                  backgroundColor: topBackgrountColor,\r\n                  borderColor: topBorderColor,\r\n                  borderWidth: 3,\r\n                  data: topSelectedview,\r\n                },\r\n              ],\r\n            }}\r\n            height={600}\r\n            width={600}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n            }}\r\n          />\r\n        </div>\r\n        <div id=\"div-top-list\">\r\n          <label\r\n            style={{ padding: \"0 18px\", color: \"white\", fontSize: \"25px\" }}\r\n          >\r\n            <span data-test = \"top-text\" style={{ padding: \"5px\" }}>\r\n              <b>Top</b>\r\n            </span>\r\n            <input\r\n              style={{ fontSize: \"15px\" }}\r\n              type=\"number\"\r\n              min=\"3\"\r\n              max=\"10\"\r\n              id=\"top-viewed-input\"\r\n              onChange={(e) => {\r\n                e.target.value <= 10 && e.target.value >= 3\r\n                  ? setCustomView(e.target.value)\r\n                  : setCustomView(5);\r\n              }}\r\n            />\r\n            <span data-test = \"viewed-text\" style={{ padding: \"5px\" }}>\r\n              <b>viewed products</b> (only 3 to 10)\r\n            </span>\r\n          </label>\r\n          <br />\r\n          <br />\r\n          <ul style={{ listStyleType: \"none\" }}>\r\n            {topSelectedProduct.map((ele, ind) => (\r\n              <li id=\"div-top-list-li\" key={ele.id}>\r\n                <span\r\n                  style={{\r\n                    color: topBorderColor[ind],\r\n                    fontSize: \"20px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >{`${ind + 1}. `}</span>\r\n                <a\r\n                  style={{\r\n                    color: topBorderColor[ind],\r\n                    fontSize: \"20px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick = {()=> props.history.push(`/product/${ele.id}`)}\r\n                  // href={`/product/${ele.id}`}\r\n                >\r\n                  <b>{ele.name}</b>\r\n                </a>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\SignInPage.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\actions\\userActions.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\data\\usersApi.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\reducers\\usersReducer.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\SignInForm.js",["153","154","155"],"import React, { useRef } from \"react\";\r\nimport { withFormik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nlet register = false;\r\n\r\nfunction SignInForm(props) {\r\n  const { errors, touched } = props;\r\n\r\n  function submitForm() {\r\n    let getUser = props.users.filter((user) => props.values.id == user.id);\r\n    if (!getUser[0]) {\r\n      register = true;\r\n    } else {\r\n      if (props.values.password == getUser[0].password) {\r\n        localStorage.setItem(\"login\", getUser[0].id);\r\n        props.history.push(\"/products\");\r\n      } else {\r\n        register = true;\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"div-signin\">\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <b>Log in</b>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <Form>\r\n            <Field type=\"text\"  name=\"id\" placeholder=\"Email ID\" /><br/>\r\n            {touched.id && errors.id && (\r\n              <span data-test='email' className=\"form-err-login\">{errors.id}</span>\r\n            )}\r\n            <br />\r\n\r\n            <Field type=\"password\" name=\"password\" placeholder=\"Password\" /><br/>\r\n            {touched.password && errors.password && (\r\n              <span className=\"form-err-login\">{errors.password}</span>\r\n            )}\r\n            <br />\r\n            <span className={register ? \"display-register\" : \"display-none\"}>\r\n              The account or password you entered was invalid. Enter the correct account/password or{\" \"}\r\n              <a href=\"/signup\">\r\n                <span style={{ color: \"red\" }}>register now!</span>\r\n              </a>\r\n              <br />\r\n              <br />\r\n            </span>\r\n\r\n            <button\r\n              className=\"btn-add-product-sub\"\r\n              onClick={submitForm}\r\n              type=\"submit\"\r\n              style={{\r\n                width: \"100px\",\r\n                height: \"50px\",\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst formikForm = withFormik({\r\n  mapPropsToValues({ eml, pwd }) {\r\n    return {\r\n      id: eml || \"\",\r\n      password: pwd || \"\",\r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    id: Yup.string()\r\n      .email(\"Please enter valid email!\")\r\n      .required(\"Email ID is required\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  }),\r\n})(SignInForm);\r\n\r\nexport default formikForm;\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\SignUpPage.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\SignUpForm.js",["156"],"import React, { useRef } from \"react\";\r\nimport { withFormik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nfunction SignUpForm(props) {\r\n  const { errors, touched } = props;\r\n\r\n  function submitForm() {\r\n    let user = {};\r\n    user.firstname = props.values.firstname;\r\n    user.lastname = props.values.lastname;\r\n    user.id = props.values.id;\r\n    user.location = props.values.location;\r\n    user.mobile = props.values.mobile;\r\n    user.password = props.values.password;\r\n    props.submitFormBtn(user)\r\n    props.history.push('/signin')\r\n  }\r\n\r\n  return (\r\n    <div className=\"div-signin\">\r\n      <div className=\"card card-div-signup\">\r\n        <div style={{textAlign: \"center\"}} className=\"card-header\">\r\n          <b>Sign-up Form</b>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <Form>\r\n            <span className = \"signup-input sign-up-span\">First Name: </span>\r\n            <Field type=\"text\" name=\"firstname\" placeholder=\"First Name\" /><br/>\r\n            {touched.firstname && errors.firstname && (\r\n              <span className=\"form-err\">{errors.firstname}</span>\r\n            )}\r\n            <br />\r\n            <span className = \"signup-input sign-up-span\">Last Name: </span>\r\n            <Field type=\"text\" name=\"lastname\" placeholder=\"Last Name\" /><br/>\r\n            {touched.lastname && errors.lastname && (\r\n              <span className=\"form-err\">{errors.lastname}</span>\r\n            )}\r\n            <br />\r\n            <span className = \"signup-input sign-up-span\">Email ID: </span>\r\n            <Field type=\"text\" name=\"id\" placeholder=\"Email ID\" /><br/>\r\n            {touched.id && errors.id && (\r\n              <span className=\"form-err\">{errors.id}</span>\r\n            )}\r\n            <br />\r\n            <span className = \"signup-input sign-up-span\">City: </span>\r\n            <Field type=\"text\" name=\"location\" placeholder=\"City\" /><br/>\r\n            {touched.location && errors.location && (\r\n              <span className=\"form-err\">{errors.location}</span>\r\n            )}\r\n            <br />\r\n            <span className = \"signup-input sign-up-span\">Mobile: </span>\r\n            <Field type=\"text\" name=\"mobile\" placeholder=\"Mobile\" /><br/>\r\n            {touched.mobile && errors.mobile && (\r\n              <span className=\"form-err\">{errors.mobile}</span>\r\n            )}\r\n            <br />\r\n            \r\n            <span className = \"signup-input sign-up-span\">Password: </span>\r\n            <Field type=\"password\" name=\"password\" placeholder=\"Password\" /><br/>\r\n            {touched.password && errors.password && (\r\n              <span className=\"form-err\">{errors.password}</span>\r\n            )}\r\n            <br />\r\n            <button\r\n              className=\"btn-add-product-sub sign-up-btn\"\r\n              onClick={submitForm}\r\n              type=\"submit\"\r\n              style={{\r\n                width: \"100px\",\r\n                height: \"50px\",\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst formikForm = withFormik({\r\n  mapPropsToValues({ fName, lName, eml, loc, mbl, pwd }) {\r\n    return {\r\n      firstname: fName || \"\",\r\n      lastname: lName || \"\",\r\n      id: eml || \"\",\r\n      location: loc || \"\",\r\n      mobile: mbl ||\"\",\r\n      password: pwd || \"\",\r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    firstname: Yup.string().required(\"First name is required!\"),\r\n    lastname: Yup.string().required(\"Last name is required!\"),\r\n    id: Yup.string().email().required(\"Email id is required!\"),\r\n    location: Yup.string().required(\"Location required!\"),\r\n    mobile: Yup.string().min(10, \"Invalid number!\").required(\"Mobile is required!\"),\r\n    password: Yup.string().min(6, \"Atleast 6 letters!\").required(\"Password is required!\"),\r\n  }),\r\n})(SignUpForm);\r\n\r\nexport default formikForm;\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\Loading.js",["157","158","159"],"import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Loading() {\r\n  const [val, setVal] = useState(false);\r\n\r\n  return (\r\n    <div className=\"loading-div\">\r\n      <p>\r\n        <div\r\n          style={{ display: \"block\" }}\r\n          class=\"spinner-border text-dark\"\r\n          role=\"status\"\r\n        ></div>\r\n      </p>\r\n\r\n      <p style={{ paddingLeft: \"15px\" }}> Loading...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n",{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":77,"column":17,"nodeType":"166","endLine":77,"endColumn":29},{"ruleId":"164","severity":1,"message":"165","line":129,"column":15,"nodeType":"166","endLine":129,"endColumn":27},{"ruleId":"167","severity":1,"message":"168","line":9,"column":72,"nodeType":"169","messageId":"170","endLine":9,"endColumn":74},{"ruleId":"167","severity":1,"message":"168","line":111,"column":45,"nodeType":"169","messageId":"170","endLine":111,"endColumn":47},{"ruleId":"171","severity":1,"message":"172","line":171,"column":64,"nodeType":"173","messageId":"174","endLine":171,"endColumn":66},{"ruleId":"167","severity":1,"message":"168","line":200,"column":41,"nodeType":"169","messageId":"170","endLine":200,"endColumn":43},{"ruleId":"164","severity":1,"message":"165","line":325,"column":17,"nodeType":"166","endLine":329,"endColumn":18},{"ruleId":"164","severity":1,"message":"165","line":334,"column":17,"nodeType":"166","endLine":337,"endColumn":18},{"ruleId":"164","severity":1,"message":"175","line":349,"column":15,"nodeType":"166","endLine":353,"endColumn":16},{"ruleId":"164","severity":1,"message":"175","line":358,"column":15,"nodeType":"166","endLine":362,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":365,"column":15,"nodeType":"166","endLine":405,"endColumn":16},{"ruleId":"167","severity":1,"message":"168","line":368,"column":55,"nodeType":"169","messageId":"170","endLine":368,"endColumn":57},{"ruleId":"167","severity":1,"message":"176","line":11,"column":65,"nodeType":"169","messageId":"170","endLine":11,"endColumn":67},{"ruleId":"177","severity":1,"message":"178","line":3,"column":13,"nodeType":"179","messageId":"180","endLine":3,"endColumn":27},{"ruleId":"164","severity":1,"message":"175","line":95,"column":13,"nodeType":"166","endLine":99,"endColumn":14},{"ruleId":"164","severity":1,"message":"175","line":116,"column":13,"nodeType":"166","endLine":123,"endColumn":14},{"ruleId":"177","severity":1,"message":"181","line":3,"column":9,"nodeType":"179","messageId":"180","endLine":3,"endColumn":13},{"ruleId":"167","severity":1,"message":"168","line":15,"column":33,"nodeType":"169","messageId":"170","endLine":15,"endColumn":35},{"ruleId":"182","severity":1,"message":"183","line":24,"column":15,"nodeType":"166","endLine":33,"endColumn":17},{"ruleId":"177","severity":1,"message":"184","line":1,"column":35,"nodeType":"179","messageId":"180","endLine":1,"endColumn":41},{"ruleId":"177","severity":1,"message":"184","line":1,"column":35,"nodeType":"179","messageId":"180","endLine":1,"endColumn":41},{"ruleId":"177","severity":1,"message":"185","line":3,"column":15,"nodeType":"179","messageId":"180","endLine":3,"endColumn":23},{"ruleId":"177","severity":1,"message":"186","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":12},{"ruleId":"164","severity":1,"message":"175","line":122,"column":17,"nodeType":"166","endLine":130,"endColumn":18},{"ruleId":"177","severity":1,"message":"187","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":11,"column":64,"nodeType":"169","messageId":"170","endLine":11,"endColumn":66},{"ruleId":"167","severity":1,"message":"168","line":15,"column":33,"nodeType":"169","messageId":"170","endLine":15,"endColumn":35},{"ruleId":"177","severity":1,"message":"187","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":23},{"ruleId":"177","severity":1,"message":"188","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"177","severity":1,"message":"189","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":13},{"ruleId":"177","severity":1,"message":"190","line":4,"column":15,"nodeType":"179","messageId":"180","endLine":4,"endColumn":21},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Expected '!==' and instead saw '!='.","no-unused-vars","'productActions' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Formik' is defined but never used.","'Doughnut' is defined but never used.","'logo' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'val' is assigned a value but never used.","'setVal' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]