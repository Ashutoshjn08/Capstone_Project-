[{"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\index.js":"1","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\reportWebVitals.js":"2","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\App.js":"3","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\AllProductsPage.js":"4","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\ProductList.js":"5","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\store\\store.js":"6","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\actions\\productActions.js":"7","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\data\\productsApi.js":"8","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\actions\\actionTypes.js":"9","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\reducers\\index.js":"10","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\reducers\\productsReducer.js":"11","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\Product.js":"12","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\Home.js":"13","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\ProductDetails.js":"14","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\AddProductPage.js":"15","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\AddProductForm.js":"16","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\UpdageProductPage.js":"17","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\UpdateProductForm.js":"18","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\TopProductPage.js":"19","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\BarChart.js":"20"},{"size":478,"mtime":1610630464188,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":4049,"mtime":1610771922708,"results":"24","hashOfConfig":"22"},{"size":1057,"mtime":1610751153630,"results":"25","hashOfConfig":"22"},{"size":3940,"mtime":1610751126293,"results":"26","hashOfConfig":"22"},{"size":221,"mtime":1610274684186,"results":"27","hashOfConfig":"22"},{"size":1887,"mtime":1610760924828,"results":"28","hashOfConfig":"22"},{"size":1274,"mtime":1610751079806,"results":"29","hashOfConfig":"22"},{"size":221,"mtime":1610660282211,"results":"30","hashOfConfig":"22"},{"size":164,"mtime":1610275227120,"results":"31","hashOfConfig":"22"},{"size":1139,"mtime":1610761201048,"results":"32","hashOfConfig":"22"},{"size":2879,"mtime":1610751171472,"results":"33","hashOfConfig":"22"},{"size":1155,"mtime":1610772722859,"results":"34","hashOfConfig":"22"},{"size":1631,"mtime":1610761095388,"results":"35","hashOfConfig":"22"},{"size":952,"mtime":1610646818274,"results":"36","hashOfConfig":"22"},{"size":4445,"mtime":1610646768224,"results":"37","hashOfConfig":"22"},{"size":1270,"mtime":1610754351165,"results":"38","hashOfConfig":"22"},{"size":4078,"mtime":1610752905865,"results":"39","hashOfConfig":"22"},{"size":762,"mtime":1610772545389,"results":"40","hashOfConfig":"22"},{"size":2899,"mtime":1610772269409,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1pqemsv",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"44"},"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\index.js",[],["94","95"],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\reportWebVitals.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\App.js",["96","97"],"//json-server -p 3001 --watch db.json\nimport React, { Component } from \"react\";\nimport AllProductsPage from \"./components/AllProductsPage\";\nimport Home from \"./components/Home\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport { getAllProducts } from \"./actions/productActions\";\nimport {\n  BrowserRouter as Router,\n  NavLink,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport \"./css/app.css\";\nimport logo from \"./logo.png\";\nimport ProductDetails from \"./components/ProductDetails\";\nimport AddProductPage from \"./components/AddProductPage\";\nimport UpdageProductPage from \"./components/UpdageProductPage\";\nimport TopProductPage from \"./components/TopProductPage\";\n\nstore.dispatch(getAllProducts());\n\nclass Links extends Component {\n  onChangeHandle = (val) => {\n    this.props.onChangeHandleProp(val);\n  };\n\n  render() {\n    return (\n      <nav  className=\"navbar navbar-expand-sm bg-dark navbar-dark nav-custom\">\n        <span>\n          <a className=\"navbar-brand\" href=\"/\">\n            <img src={logo} alt=\"Product Inventory\"></img>\n          </a>\n        </span>\n        <ul className=\"navbar-nav\">\n          <li className=\"right-align-home-product-nav nav-item\">\n            <NavLink exact to=\"/\">\n              HOME\n            </NavLink>\n          </li>\n          <li className=\"right-align-home-product-nav nav-item\">\n            <NavLink to=\"/products\">PRODUCTS</NavLink>\n          </li>\n          <li className=\"right-align-home-product-nav nav-item\">\n            <NavLink to=\"/topproducts\">TOP PRODUCTS</NavLink>\n          </li>\n        </ul>\n\n        <ul className=\"nav navbar-nav ml-auto\">\n          <li className=\"li-signin-up\">\n            <a href=\"#\">\n              <span className=\"glyphicon glyphicon-user\"></span> Sign Up{\" \"}\n            </a>\n          </li>\n          <li className=\"li-signin-up\">\n            <a href=\"#\">\n              <span className =\"glyphicon glyphicon-log-in\"></span> Login{\" \"}\n            </a>\n          </li>\n          <li>\n            <input\n              onChange={(e) => {\n                this.onChangeHandle(e.target.value);\n              }}\n              className=\"form-control me-2\"\n              type=\"search\"\n              placeholder=\"Search Product\"\n              aria-label=\"Search\"\n            />\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default class App extends Component {\n  state = {\n    searchValue: \"\",\n  };\n\n  onChangeHandle = (val) => {\n    this.setState({ searchValue: val.toLowerCase() });\n    console.log(this.state.searchValue);\n  };\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <Links onChangeHandleProp={this.onChangeHandle} />\n\n          <Switch>\n            <>\n            <div className=\"content-div-list\">\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route path = \"/topproducts\" render = {\n                (props) => {\n                  return(\n                    <div id=\"top-product\">\n                        <TopProductPage {...props}/>\n                      </div>\n                )}\n              }/>\n              <Route\n                path=\"/products\"\n                render={(props) => {\n                  return (\n                   \n                        <AllProductsPage\n                          {...props}\n                          searchValue={this.state.searchValue}\n                        />\n                     \n                  );\n                }}\n              />\n              <Route\n                path=\"/product/:id\"\n                render={(props) => <ProductDetails {...props} />}\n              />\n              <Route\n                path=\"/addproduct\"\n                render={(props) => <AddProductPage {...props} />}\n              />\n              <Route\n                path=\"/updateproduct\"\n                render={(props) => <UpdageProductPage {...props} />}\n              />\n            </div>\n            </>\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\AllProductsPage.js",["98"],"import React, { Component } from 'react'\r\nimport ProductList from './ProductList'\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as action from '../actions/productActions'\r\n\r\nclass AllProductsPage extends Component {\r\n\r\n    incViewCount = (id) =>{\r\n        const product = this.props.products.filter(product => product.id == id);\r\n        this.props.actions.incViewCount(product[0].view, id);\r\n    }\r\n\r\n    deleteProducthandle = (id) => {\r\n        this.props.actions.deleteProduct(id);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProductList deleteProductProp = {this.deleteProducthandle} incViewCountProp = {this.incViewCount} {...this.props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n    return {products : state.products}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions : bindActionCreators(action, dispatch)\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllProductsPage)\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\ProductList.js",["99","100","101"],"import React, { Component } from \"react\";\r\nimport Product from \"./Product\";\r\n\r\nexport default class ProductList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  //Common function after checking value from search bar\r\n\r\n  getProductsAfterSearch = (product) => {\r\n    let classString;\r\n    const remainder = product.id < 7 ? product.id : product.id % 7;\r\n    switch (remainder) {\r\n      case 0:\r\n        classString = \"primary\";\r\n        break;\r\n      case 1:\r\n        classString = \"secondary\";\r\n        break;\r\n      case 2:\r\n        classString = \"success\";\r\n        break;\r\n      case 3:\r\n        classString = \"danger\";\r\n        break;\r\n      case 4:\r\n        classString = \"warning\";\r\n        break;\r\n      case 5:\r\n        classString = \"info\";\r\n        break;\r\n      case 6:\r\n        classString = \"light\";\r\n        break;\r\n      default:\r\n        classString = \"dark\";\r\n    }\r\n    return classString;\r\n  };\r\n\r\n  render() {\r\n    const productList = this.props.products.map((product) => {\r\n      if (\r\n        this.props.searchValue &&\r\n        (product.category.toLowerCase().includes(this.props.searchValue) ||\r\n          product.title.toLowerCase().includes(this.props.searchValue) ||\r\n          product.manufacturer.toLowerCase().includes(this.props.searchValue))\r\n      ) {\r\n        return (\r\n          <li\r\n            key={product.id}\r\n            className={`list-group-item list-group-item-${this.getProductsAfterSearch(\r\n              product\r\n            )}`}\r\n          >\r\n            <Product {...product} {...this.props} />\r\n          </li>\r\n        );\r\n      } else if (this.props.searchValue == \"\") {\r\n        return (\r\n          <li\r\n            key={product.id}\r\n            className={`list-group-item list-group-item-${this.getProductsAfterSearch(\r\n              product\r\n            )}`}\r\n          >\r\n            <Product {...product} {...this.props} />\r\n          </li>\r\n        );\r\n      }\r\n    });\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"list-head-names col-sm-4\">\r\n            <span id = \"head-names\" className=\"prod-items\">Title</span>\r\n            </div>\r\n            <div className=\"list-head-names col-sm-1\">\r\n              <span id = \"head-names\" className=\"prod-items\">Price</span>\r\n            </div>\r\n            <div className=\"list-head-names col-sm-1\">\r\n              <span id = \"head-names\" className=\"prod-items\">Quantity</span>\r\n            </div>\r\n            <div className=\"list-head-names col-sm-2\">\r\n              <span id = \"head-names\" className=\"prod-items\">Category</span>\r\n            </div>\r\n            <div className=\"list-head-names col-sm-1\">\r\n              <span id = \"head-names\" className=\"prod-items\">Brand</span>\r\n            </div>\r\n            <div className=\"list-head-names col-sm-3\">\r\n             \r\n                <a\r\n                  href=\"/addproduct\"\r\n                  style={{\r\n                    width: \"170px\"\r\n                  }}\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  <span >Add Product</span>\r\n                </a>\r\n                <br />\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{ width: \"100%\" }}>\r\n          <ul className=\"list-group\">{productList}</ul>\r\n        </div>\r\n      </div>\r\n      // <div>\r\n      // <div style={{ height: \"60px\" }}>\r\n      //   <a\r\n      //     href=\"/addproduct\"\r\n      //     style={{\r\n      //       width: \"150px\",\r\n      //       margin: \"10Px 54px 10px 0\",\r\n      //       float: \"right\",\r\n      //     }}\r\n      //     className=\"btn btn-primary\"\r\n      //   >\r\n      //     <span>Add Product</span>\r\n      //   </a>\r\n      //   <br />\r\n      // </div>\r\n\r\n      //   <div style={{ width: \"100%\" }}>\r\n      //     <ul className=\"list-group\">{productList}</ul>\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\store\\store.js",["102"],"import rootReducer from '../reducers';\r\nimport thunk from 'redux-thunk';\r\nimport {createStore, applyMiddleware} from 'redux';\r\n\r\nconst store = createStore(rootReducer, {}, applyMiddleware(thunk));\r\n\r\nexport default store;","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\actions\\productActions.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\data\\productsApi.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\actions\\actionTypes.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\reducers\\index.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\reducers\\productsReducer.js",["103"],"import * as types from '../actions/actionTypes';\r\n\r\nexport default function productsReducer (state = [], action) {\r\n    // debugger;\r\n    switch (action.type) {\r\n        case types.GET_PRODUCTS:\r\n            return action.products;\r\n            \r\n        case types.ADD_PRODUCT:\r\n            return [\r\n                ...state,\r\n                action.product\r\n            ];\r\n        case types.DELETE_PRODUCT:\r\n            // debugger;\r\n            let newStateDelete =  state.filter(product => product.id != action.id);\r\n            return newStateDelete;\r\n            \r\n        case types.UPDATE_PRODUCT:\r\n            let newStateWithoutProductUpdate = state.filter(item => item.id !== action.product.id);\r\n            return [\r\n                action.product,  ...newStateWithoutProductUpdate\r\n            ]\r\n\r\n         case types.INC_VIEW:\r\n             debugger;\r\n             let newStateWithoutProductInc = state.filter(item => item.id !== action.product.id);\r\n            return [\r\n                action.product,  ...newStateWithoutProductInc\r\n            ]\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\Product.js",["104","105"],"import React, { Component } from \"react\";\r\nimport '../css/product.css'\r\nimport * as productActions from '../actions/productActions'\r\n\r\nexport default class Product extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.detailLink = `/product/${this.props.id}`\r\n  }\r\n\r\n  deleteProduct = (id) => {\r\n    var flag = window.confirm(\"Are you sure to remove this product?\");\r\n    if (flag) {\r\n      this.props.deleteProductProp(id);\r\n    }   \r\n  }\r\n\r\n  updateProduct = (id) =>{\r\n    console.log(\"id\", id, \"props\", this.props);\r\n    this.props.history.push( '/updateproduct', {\r\n      id : this.props.id,\r\n      title: this.props.title,\r\n      price: this.props.price,\r\n      description: this.props.description,\r\n      manufacturer: this.props.manufacturer,\r\n      category: this.props.category,\r\n      image: this.props.image,\r\n      quantity : this.props.quantity\r\n    });\r\n  }\r\n  \r\n  onClickHandle = (id) => {\r\n    \r\n      this.props.incViewCountProp(id);\r\n      this.props.history.push( this.detailLink, {\r\n      id : this.props.id,\r\n      title: this.props.title,\r\n      price: this.props.price,\r\n      description: this.props.description,\r\n      manufacturer: this.props.manufacturer,\r\n      category: this.props.category,\r\n      image: this.props.image\r\n    });\r\n    debugger;\r\n  }  \r\n\r\n  render() {\r\n    let smallTitel =\r\n      this.props.title.length < 35\r\n        ? this.props.title\r\n        : this.props.title.slice(0, 35) + \"...\";\r\n\r\n     \r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-4\">\r\n          <input\r\n              className=\"form-check-input me-1\"\r\n              type=\"checkbox\"\r\n              value=\"\"\r\n              aria-label=\"...\"\r\n            />\r\n              <a href = {this.detailLink} style = {{cursor:\"pointer\"}} className=\"prod-items\" onClick = {()=>this.onClickHandle(this.props.id)}><u>{smallTitel}</u></a>\r\n                     \r\n            </div>\r\n          <div className=\"col-sm-1\"><span className=\"prod-items\">{this.props.price}  Rs.</span></div>\r\n          <div className=\"col-sm-1\"><span className=\"prod-items\">{this.props.quantity}  items</span></div>\r\n          <div className=\"col-sm-2\"><span className=\"prod-items\">{this.props.category}</span></div>\r\n          <div className=\"col-sm-1\"><span className=\"prod-items\">{this.props.manufacturer}</span></div>\r\n          <div className=\"col-sm-3\">\r\n          <a id = {this.props.id} onClick = {event => {this.updateProduct(event.currentTarget.id)}} style ={{marginLeft:\"5px\"}} href=\"/updateproduct\" className=\"btn btn-primary\"><span>Update</span></a>\r\n          <a id = {this.props.id} onClick = {event => {this.deleteProduct(event.currentTarget.id)}} style ={{marginLeft:\"5px\"}} href=\"#\" className=\"btn btn-primary\"><span>Delete</span></a>\r\n              </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\Home.js",["106"],"import React, { Component } from \"react\";\r\nimport \"../css/home.css\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className = \"ui container\">\r\n      <div className=\"home-container\">\r\n        <div className=\"card text-center\">\r\n          <div className=\"card-header card-head\"><h3>Product Inventory</h3></div>\r\n          <div className=\"card-body\">\r\n            <p style = {{textAlign:\"justify\"}} className = \"card-text\">\r\n            This system has provision to view the list of products and allows only the registered and authenticated users to add, edit, delete the products and view the product detail. The user interface to the system is implemented using React. The data about the products is managed in a JSON server. The client application interfaces with the JSON Server through http to retrieve and store data. \r\n            </p>\r\n            <a style = {{width: \"200px\"}} href=\"/products\" className=\"btn btn-primary\">\r\n              <span>View Our Products</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\ProductDetails.js",["107"],"import React, { Component } from \"react\";\r\n\r\nexport default class ProductDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    debugger;\r\n    this.smallStr = this.props.location.state;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"home-container\">\r\n        <div className=\"card\">\r\n          <div className=\"pro-details-main\">\r\n            <div className=\"img-shadow\">\r\n              <img\r\n                style={{\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                  margin: \"auto\",\r\n                  padding: \"20px\",\r\n                }}\r\n                src={this.smallStr.image}\r\n                alt=\"Card image cap\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"card-body pro-details\">\r\n              <h4 className=\"card-title\">{this.smallStr.title}</h4>\r\n              <p className=\"card-text\">{this.smallStr.description}</p>\r\n              <p>\r\n                <b>Price: </b>Rs. {this.smallStr.price}\r\n              </p>\r\n              <p>\r\n                <b>Brand: </b>\r\n                {this.smallStr.manufacturer}\r\n              </p>\r\n              <p>\r\n                <b>Catagory: </b>\r\n                {this.smallStr.category}\r\n              </p>\r\n              <a\r\n                href=\"/products\"\r\n                className=\"btn btn-primary\"\r\n                style={{\r\n                  width: \"200px\",\r\n                  verticalAlign: \"middle\",\r\n                }}\r\n              >\r\n                View Other Products\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\AddProductPage.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\AddProductForm.js",["108"],"import { withFormik, Field, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst AddProductForm = (props) => {\r\n  const { errors, touched } = props;\r\n\r\n  const addProductSubmit = (e) => {\r\n    const product = {};\r\n    e.stopPropagation();\r\n    product.title = props.values.title;\r\n    product.price = props.values.price;\r\n    product.description = props.values.description;\r\n    product.manufacturer = props.values.manufacturer;\r\n    product.quantity = props.values.quantity;\r\n    product.category = props.values.category;\r\n    product.image = props.values.image;\r\n    product.view = 0;\r\n    if (\r\n      !product.title ||\r\n      !product.price ||\r\n      !product.description ||\r\n      !product.manufacturer ||\r\n      !product.quantity ||\r\n      !product.category ||\r\n      !product.image\r\n    ) {\r\n      var flag = window.confirm(\"Do you want to leave this page?\");\r\n      if (flag) {\r\n        props.history.push(\"/products\");\r\n      }\r\n    } else {\r\n      props.addProductProp(product);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <h4>Fill the form:</h4>\r\n      <br />\r\n      <span className=\"field-title\">Title: </span>\r\n      <Field type=\"text\" name=\"title\" placeholder=\"Enter Title\" />\r\n      {touched.title && errors.title && (\r\n        <span className=\"form-err\">{errors.title}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Price: </span>\r\n      <Field type=\"number\" name=\"price\" placeholder=\"Enter Price\" />\r\n      {touched.price && errors.price && (\r\n        <span className=\"form-err\">{errors.price}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Description: </span>\r\n      <Field\r\n        type=\"textarea\"\r\n        name=\"description\"\r\n        placeholder=\"Enter Description\"\r\n      />\r\n      {touched.description && errors.description && (\r\n        <span className=\"form-err\">{errors.description}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Brand: </span>\r\n      <Field type=\"text\" name=\"manufacturer\" placeholder=\"Enter Brand Name\" />\r\n      {touched.manufacturer && errors.manufacturer && (\r\n        <span className=\"form-err\">{errors.manufacturer}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Quantity: </span>\r\n      <Field type=\"number\" name=\"quantity\" placeholder=\"Enter Quantity\" />\r\n      {touched.quantity && errors.quantity && (\r\n        <span className=\"form-err\">{errors.quantity}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Category: </span>\r\n      <Field type=\"text\" name=\"category\" placeholder=\"Enter Category\" />\r\n      {touched.category && errors.category && (\r\n        <span className=\"form-err\">{errors.category}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Image Link: </span>\r\n      <Field type=\"url\" name=\"image\" placeholder=\"Enter url\" />\r\n      {touched.image && errors.image && (\r\n        <span className=\"form-err\">{errors.image}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n      <button\r\n        onClick={addProductSubmit}\r\n        className=\"btn-add-product-sub\"\r\n        type=\"submit\"\r\n      >\r\n        Submit Form\r\n      </button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst formikForm = withFormik({\r\n  mapPropsToValues({ ttl, prc, desc, brand, qnty, cat, img }) {\r\n    return {\r\n      title: ttl || \"\",\r\n      price: prc || \"\",\r\n      description: desc || \"\",\r\n      manufacturer: brand || \"\",\r\n      quantity: qnty || \"\",\r\n      category: cat || \"\",\r\n      image: img || \"\",\r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    title: Yup.string()\r\n      .min(3, \"At least 3 characters are required\")\r\n      .required(\"Title is required\"),\r\n    price: Yup.number()\r\n      .positive(\"Enter Only Numbers\")\r\n      .required(\"Price is required\"),\r\n    description: Yup.string()\r\n      .min(20, \"At least 20 characters are required\")\r\n      .required(\"Description is required\"),\r\n    manufacturer: Yup.string()\r\n      .min(3, \"At least 3 characters are required\")\r\n      .required(\"Title is required\"),\r\n    quantity: Yup.number()\r\n      .positive(\"Enter Only Numbers\")\r\n      .required(\"Quantity is required\"),\r\n    category: Yup.string()\r\n      .min(3, \"At least 3 characters are required\")\r\n      .required(\"Category is required\"),\r\n    image: Yup.string().url(\"Please enter the valid url link\"),\r\n  }),\r\n})(AddProductForm);\r\n\r\nexport default formikForm;\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\UpdageProductPage.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\UpdateProductForm.js",["109"],"import { withFormik, Field, Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst UpdateProductForm = (props) => {\r\n  const { errors, touched} = props;\r\n\r\n  const updateProductSubmit = () => {\r\n    const product = {};\r\n    // product.title = props.values.title;\r\n    product.price = props.values.price;\r\n    // product.description = props.values.description;\r\n    // product.manufacturer = props.values.manufacturer;\r\n    product.quantity = props.values.quantity;\r\n    product.category = props.values.category;\r\n    product.image = props.values.image;\r\n    props.updateProductProp(product);\r\n  }\r\n\r\n  return (\r\n    <Form>\r\n      <h4>Fill the form to update the product's details:</h4>\r\n      <br />\r\n     \r\n      {/* <span className=\"field-title\">Title: </span>\r\n      <Field type=\"text\" name=\"title\"  placeholder = {props.title}/>\r\n      {touched.title && errors.title && (\r\n        <span className=\"form-err\">{errors.title}</span>\r\n      )}\r\n      <br />\r\n      <br /> */}\r\n\r\n      <span className=\"field-title\">Price: </span>\r\n      <Field type=\"number\" name=\"price\" placeholder = {props.price}  />\r\n      {touched.price && errors.price && (\r\n        <span className=\"form-err\">{errors.price}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      {/* <span className=\"field-title\">Description: </span>\r\n      <Field type=\"textarea\" name=\"description\" placeholder = {props.description}  />\r\n      {touched.description && errors.description && (\r\n        <span className=\"form-err\">{errors.description}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Brand: </span>\r\n      <Field type=\"text\" name=\"manufacturer\" placeholder = {props.manufacturer}  />\r\n      {touched.manufacturer && errors.manufacturer && (\r\n        <span className=\"form-err\">{errors.manufacturer}</span>\r\n      )}\r\n      <br />\r\n      <br /> */}\r\n\r\n      <span className=\"field-title\">Quantity: </span>\r\n      <Field type=\"number\" name=\"quantity\" placeholder = {props.quantity}  />\r\n      {touched.quantity && errors.quantity && (\r\n        <span className=\"form-err\">{errors.quantity}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Category: </span>\r\n      <Field type=\"text\" name=\"category\" placeholder = {props.category} />\r\n      {touched.category && errors.category && (\r\n        <span className=\"form-err\">{errors.category}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n\r\n      <span className=\"field-title\">Image Link: </span>\r\n      <Field type=\"url\" name=\"image\" placeholder = {props.image}   />\r\n      {touched.image && errors.image && (\r\n        <span className=\"form-err\">{errors.image}</span>\r\n      )}\r\n      <br />\r\n      <br />\r\n      <button onClick = {updateProductSubmit} className = \"btn-add-product-sub\" type=\"submit\">Submit Form</button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst formikForm = withFormik({\r\n  mapPropsToValues({ ttl, prc, desc, brand, qnty, cat, img }) {\r\n    return {\r\n        // title: ttl || \"\",\r\n        price: prc || \"\",\r\n        // description: desc || \"\",\r\n        // manufacturer: brand || \"\",\r\n        quantity: qnty || \"\",\r\n        category: cat || \"\",\r\n        image: img || \"\",\r\n    };\r\n  },\r\n  validationSchema: Yup.object().shape({\r\n    // title: Yup.string().min(3, \"At least 3 characters are required\")\r\n    // .required(\"Title is required\"),\r\n    price: Yup.number()\r\n      .positive(\"Enter Only Numbers\")\r\n      .required(\"Price is required\"),\r\n    // description: Yup.string()\r\n    //   .min(20, \"At least 20 characters are required\")\r\n    //   .required(\"Description is required\"),\r\n    // manufacturer: Yup.string()\r\n    //   .min(3, \"At least 3 characters are required\")\r\n    //   .required(\"Title is required\"),\r\n    quantity: Yup.number()\r\n      .positive(\"Enter Only Numbers\")\r\n      .required(\"Quantity is required\"),\r\n    category: Yup.string()\r\n      .min(3, \"At least 3 characters are required\")\r\n      .required(\"Category is required\"),\r\n    image: Yup.string().url(\"Please enter the valid url link\"),\r\n  }),\r\n})(UpdateProductForm);\r\n\r\nexport default formikForm;\r\n","F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\TopProductPage.js",[],"F:\\React_Assignments\\Capstone Project\\products-inventory\\src\\components\\BarChart.js",["110"],"//https://color.adobe.com/search?q=chart%20bar&page=2\r\nimport React, { useState } from \"react\";\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\n\r\nfunction BarChart(props) {\r\n  const [customView, setCustomView] = useState(5);\r\n\r\n  let views = props.products.map((product) => {\r\n    return { view: product.view, name: product.title };\r\n  });\r\n\r\n  let topViewed = views.sort((a, b) => b.view - a.view);\r\n\r\n  let backgroundColor = [\r\n    \"rgb(4, 104, 191, 0.7)\",\r\n    \"rgb(4, 119, 191, 0.7)\",\r\n    \"rgb(80, 191, 180, 0.7)\",\r\n    \"rgb(242, 196, 56, 0.7)\",\r\n    \"rgb(242, 130, 65, 0.7)\",\r\n    \"rgb(4, 104, 191, 0.7)\",\r\n    \"rgb(4, 119, 191, 0.7)\",\r\n    \"rgb(80, 191, 180, 0.7)\",\r\n    \"rgb(242, 196, 56, 0.7)\",\r\n    \"rgb(242, 130, 65, 0.7)\",\r\n  ];\r\n\r\n  let borderColor = [\r\n    \"rgb(4, 104, 191)\",\r\n    \"rgb(4, 119, 191)\",\r\n    \"rgb(80, 191, 180)\",\r\n    \"rgb(242, 196, 56)\",\r\n    \"rgb(242, 130, 65)\",\r\n    \"rgb(4, 104, 191)\",\r\n    \"rgb(4, 119, 191)\",\r\n    \"rgb(80, 191, 180)\",\r\n    \"rgb(242, 196, 56)\",\r\n    \"rgb(242, 130, 65)\",\r\n  ];\r\n\r\n  let topSelectedview = [];\r\n  let topSelectedProduct = [];\r\n  let topBackgrountColor = [];\r\n  let topBorderColor = [];\r\n\r\n  for (let i = 0; i < customView; i++) {\r\n    debugger;\r\n    topSelectedview.push(topViewed[i].view);\r\n    topSelectedProduct.push(topViewed[i].name);\r\n    topBackgrountColor.push(backgroundColor[i]);\r\n    topBorderColor.push(borderColor[i]);\r\n  }\r\n\r\n  let topSelectProductShort = topSelectedProduct.map((product) => {\r\n    return `${product.slice(0, 20)}...`;\r\n  });\r\n\r\n  return (\r\n    <div className=\"main-bar-div\">\r\n      <div className=\"bar-div\">\r\n        <Bar\r\n          data={{\r\n            labels: topSelectProductShort,\r\n            datasets: [\r\n              {\r\n                label: \"My First dataset\",\r\n                backgroundColor: topBackgrountColor,\r\n                borderColor: topBorderColor,\r\n                borderWidth: 3,\r\n                data: topSelectedview,\r\n              },\r\n            ],\r\n          }}\r\n          height={600}\r\n          width={600}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n          }}\r\n        />\r\n      </div>\r\n      <div id=\"div-top-list\">\r\n        <label style={{ padding: \"0 18px\" }}>\r\n          <span style={{ padding: \"5px\" }}>\r\n            <b>Top</b>\r\n          </span>\r\n          <input\r\n            type=\"number\"\r\n            min=\"3\"\r\n            max=\"10\"\r\n            id=\"top-viewed-input\"\r\n            onChange={(e) => setCustomView(e.target.value)}\r\n          />\r\n          <span style={{ padding: \"5px\" }}>\r\n            <b>viewed products</b>\r\n          </span>\r\n        </label>\r\n        <br />\r\n        <br />\r\n        <ul>\r\n          {topSelectedProduct.map((ele) => (\r\n            <li id=\"div-top-list-li\" key={ele}>\r\n              {ele}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BarChart;\r\n",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":52,"column":13,"nodeType":"117","endLine":52,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":57,"column":13,"nodeType":"117","endLine":57,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":10,"column":74,"nodeType":"120","messageId":"121","endLine":10,"endColumn":76},{"ruleId":"122","severity":1,"message":"123","line":5,"column":3,"nodeType":"124","messageId":"125","endLine":7,"endColumn":4},{"ruleId":"126","severity":1,"message":"127","line":43,"column":59,"nodeType":"128","messageId":"129","endLine":43,"endColumn":61},{"ruleId":"118","severity":1,"message":"119","line":60,"column":41,"nodeType":"120","messageId":"121","endLine":60,"endColumn":43},{"ruleId":"130","severity":1,"message":"131","line":5,"column":7,"nodeType":"132","messageId":"133","endLine":5,"endColumn":12},{"ruleId":"118","severity":1,"message":"134","line":16,"column":70,"nodeType":"120","messageId":"121","endLine":16,"endColumn":72},{"ruleId":"130","severity":1,"message":"135","line":3,"column":13,"nodeType":"132","messageId":"133","endLine":3,"endColumn":27},{"ruleId":"115","severity":1,"message":"116","line":73,"column":11,"nodeType":"117","endLine":73,"endColumn":166},{"ruleId":"130","severity":1,"message":"136","line":3,"column":9,"nodeType":"132","messageId":"133","endLine":3,"endColumn":13},{"ruleId":"137","severity":1,"message":"138","line":15,"column":15,"nodeType":"117","endLine":24,"endColumn":17},{"ruleId":"130","severity":1,"message":"139","line":1,"column":35,"nodeType":"132","messageId":"133","endLine":1,"endColumn":41},{"ruleId":"130","severity":1,"message":"139","line":1,"column":35,"nodeType":"132","messageId":"133","endLine":1,"endColumn":41},{"ruleId":"130","severity":1,"message":"140","line":3,"column":15,"nodeType":"132","messageId":"133","endLine":3,"endColumn":23},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'store' is assigned a value but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","'productActions' is defined but never used.","'Link' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Formik' is defined but never used.","'Doughnut' is defined but never used.","no-global-assign","no-unsafe-negation"]